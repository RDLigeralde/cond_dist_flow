# -*- coding: utf-8 -*-
"""Kernels.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15APP5AhM_5i8i3pXn_3TF_GfnuALX1h7
"""

#For saving plots automatically
from google.colab import files

#For using external files

import jax
from jax import grad, jit, vmap, jacfwd
import jax.numpy as jnp
import jax.numpy.linalg as jla
from functools import partial

import scipy
import numpy as np

import numpy.matlib
import matplotlib.pyplot as plt

import time

#ndim of data
dim = 2

#Polynomial Kernel
@jit
def poly_kernel(X, Y, bw):

  innprod = X.T @ Y
  rf = (bw * innprod + 1) ** 4

  return rf

grad_poly = jit(grad(poly_kernel, argnums = 0))

grads_poly_xs = jit(vmap(grad_poly, in_axes = (0, None, None)))

grads_poly = jit(vmap(grads_poly_xs, in_axes = (None, 0, 0), out_axes = 2))

@jit
def RHS_poly(X, Xcurr, Xtarg, bw, bwtar):

  aux1 = jnp.mean(grads_poly(X, Xcurr, bw), 2)
  aux2 = jnp.mean(grads_poly(X, Xtarg, bwtar), 2)

  out = aux1 - aux2
  return out.T